# ----------------------------------------------------------------------------
# Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
#
# This file is part of Deepchecks.
# Deepchecks is distributed under the terms of the GNU Affero General
# Public License (version 3 or later).
# You should have received a copy of the GNU Affero General Public License
# along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
# ----------------------------------------------------------------------------

"""moved alert rule to monitor

Revision ID: b85e265f38ee
Revises: 95d7fe3b963b
Create Date: 2022-08-11 15:27:19.551203

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b85e265f38ee'
down_revision = '95d7fe3b963b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('alert_rules', sa.Column('monitor_id', sa.Integer(), nullable=True))
    op.drop_constraint('alert_rules_check_id_fkey', 'alert_rules', type_='foreignkey')
    op.create_foreign_key(None, 'alert_rules', 'monitors', ['monitor_id'], ['id'])
    op.drop_column('alert_rules', 'description')
    op.drop_column('alert_rules', 'check_id')
    op.drop_column('alert_rules', 'lookback')
    op.drop_column('alert_rules', 'data_filters')
    op.add_column('monitors', sa.Column('filter_key', sa.String(length=50), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('monitors', 'filter_key')
    op.add_column('alert_rules', sa.Column('data_filters', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('alert_rules', sa.Column('lookback', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('alert_rules', sa.Column('check_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('alert_rules', sa.Column('description', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'alert_rules', type_='foreignkey')
    op.create_foreign_key('alert_rules_check_id_fkey', 'alert_rules', 'checks', ['check_id'], ['id'])
    op.drop_column('alert_rules', 'monitor_id')
    # ### end Alembic commands ###
