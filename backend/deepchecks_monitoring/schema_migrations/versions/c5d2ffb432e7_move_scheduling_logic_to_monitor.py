# ----------------------------------------------------------------------------
# Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
#
# This file is part of Deepchecks.
# Deepchecks is distributed under the terms of the GNU Affero General
# Public License (version 3 or later).
# You should have received a copy of the GNU Affero General Public License
# along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
# ----------------------------------------------------------------------------
"""move scheduling logic to monitor

Revision ID: c5d2ffb432e7
Revises: f3774099d232
Create Date: 2022-09-22 16:00:26.031710

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c5d2ffb432e7'
down_revision = 'f3774099d232'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cache_invalidations')
    op.drop_constraint('alert_rule_name_uniqueness', 'alert_rules', type_='unique')
    op.drop_column('alert_rules', 'last_run')
    op.drop_column('alert_rules', 'scheduling_start')
    op.drop_column('alert_rules', 'repeat_every')
    op.drop_column('alert_rules', 'name')

    op.add_column('monitors', sa.Column('aggregation_window', sa.Integer(), nullable=True))
    op.execute("UPDATE monitors SET aggregation_window = lookback / 12 - lookback / 12 % 3600")
    op.alter_column('monitors', 'aggregation_window', nullable=False)

    op.add_column('monitors', sa.Column('frequency', sa.Integer(), nullable=True))
    op.execute("UPDATE monitors SET frequency = aggregation_window")
    op.alter_column('monitors', 'frequency', nullable=False)

    op.add_column('monitors', sa.Column('latest_schedule', sa.DateTime(timezone=True), nullable=True))
    op.add_column('monitors', sa.Column('scheduling_start', sa.DateTime(
        timezone=True), server_default=sa.text('now()'), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('monitors', 'scheduling_start')
    op.drop_column('monitors', 'latest_schedule')

    op.drop_column('monitors', 'aggregation_window')

    op.add_column('alert_rules', sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.execute("UPDATE alert_rules SET name = "
               "(SELECT monitors.name FROM monitors WHERE monitors.id=alert_rules.monitor_id)")
    op.alter_column('alert_rules', 'name', nullable=False)

    op.add_column('alert_rules', sa.Column('repeat_every', sa.INTEGER(), autoincrement=False, nullable=True))
    op.execute("UPDATE alert_rules SET repeat_every = "
               "(SELECT monitors.frequency FROM monitors WHERE monitors.id=alert_rules.monitor_id)")
    op.drop_column('monitors', 'frequency')
    op.alter_column('alert_rules', 'repeat_every', nullable=False)

    op.add_column('alert_rules', sa.Column('scheduling_start', postgresql.TIMESTAMP(
        timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('alert_rules', sa.Column('last_run', postgresql.TIMESTAMP(
        timezone=True), autoincrement=False, nullable=True))
    op.create_unique_constraint('alert_rule_name_uniqueness', 'alert_rules', ['name', 'monitor_id'])
    op.create_table('cache_invalidations',
                    sa.Column('model_version_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('time_window', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['model_version_id'], ['model_versions.id'],
                                            name='cache_invalidations_model_version_id_fkey', onupdate='RESTRICT', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('model_version_id', 'time_window',
                                            name='pk_cache_invalidations_model_version_window')
                    )
    # ### end Alembic commands ###
