# ----------------------------------------------------------------------------
# Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
#
# This file is part of Deepchecks.
# Deepchecks is distributed under the terms of the GNU Affero General
# Public License (version 3 or later).
# You should have received a copy of the GNU Affero General Public License
# along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
# ----------------------------------------------------------------------------
"""update model version last update time

Revision ID: ae5aec6f986a
Revises: 5595c044948b
Create Date: 2023-02-01 13:57:46.408146

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ae5aec6f986a'
down_revision = '5595c044948b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(sa.text('UPDATE model_versions SET last_update_time = now() WHERE last_update_time is null'))
    op.alter_column('model_versions', 'last_update_time', nullable=False, server_default=sa.func.now())
    op.drop_column('model_versions', 'last_statistics_update')

    op.execute(sa.text('UPDATE ingestion_errors SET created_at = now() WHERE created_at is null'))
    op.alter_column('ingestion_errors', 'created_at', nullable=False, server_default=sa.func.now())
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('model_versions', sa.Column('last_statistics_update', postgresql.TIMESTAMP(timezone=True),
                                              autoincrement=False, nullable=True))
    op.alter_column('model_versions', 'last_update_time', nullable=True)
    # ### end Alembic commands ###
