# ----------------------------------------------------------------------------
# Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
#
# This file is part of Deepchecks.
# Deepchecks is distributed under the terms of the GNU Affero General
# Public License (version 3 or later).
# You should have received a copy of the GNU Affero General Public License
# along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
# ----------------------------------------------------------------------------
"""changed alert rule constraint

Revision ID: 5a3eb258120c
Revises: 7a58ef90ea7c
Create Date: 2022-09-16 08:54:27.994381

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '5a3eb258120c'
down_revision = '7a58ef90ea7c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('alert_rules_name_monitor_id_key', 'alert_rules', type_='unique')
    op.create_unique_constraint('alert_rule_name_uniqueness', 'alert_rules', ['name', 'monitor_id'])
    op.create_unique_constraint('model_version_name_uniqueness', 'model_versions', ['model_id', 'name'])
    op.create_unique_constraint("models_name_key", 'models', ['name'])
    op.execute("ALTER TABLE alert_rules ADD CONSTRAINT not_negative_repeat_every CHECK (repeat_every > 0)")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TABLE alert_rules DROP CONSTRAINT not_negative_repeat_every;")
    op.drop_constraint("models_name_key", 'models', type_='unique')
    op.drop_constraint('model_version_name_uniqueness', 'model_versions', type_='unique')
    op.drop_constraint('alert_rule_name_uniqueness', 'alert_rules', type_='unique')
    op.create_unique_constraint('alert_rules_name_monitor_id_key', 'alert_rules', ['name', 'monitor_id'])
    # ### end Alembic commands ###
