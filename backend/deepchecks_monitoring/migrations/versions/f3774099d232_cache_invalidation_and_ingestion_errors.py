# ----------------------------------------------------------------------------
# Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
#
# This file is part of Deepchecks.
# Deepchecks is distributed under the terms of the GNU Affero General
# Public License (version 3 or later).
# You should have received a copy of the GNU Affero General Public License
# along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
# ----------------------------------------------------------------------------
"""cache invalidation and ingestion errors

Revision ID: f3774099d232
Revises: 5a3eb258120c
Create Date: 2022-09-19 15:50:15.971429

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy import text
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f3774099d232'
down_revision = '5a3eb258120c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cache_invalidations',
        sa.Column('model_version_id', sa.Integer(), nullable=False),
        sa.Column('time_window', sa.DateTime(timezone=True), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(['model_version_id'], ['model_versions.id'], onupdate='RESTRICT', ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('model_version_id', 'time_window', name='pk_cache_invalidations_model_version_window')
    )
    op.add_column('ingestion_errors', sa.Column('sample', sa.String(), nullable=True))
    op.add_column('ingestion_errors', sa.Column('sample_id', sa.String(), nullable=True))
    op.drop_column('ingestion_errors', 'samples')
    op.drop_column('ingestion_errors', 'samples_ids')

    model_version_update = """
        UPDATE model_versions SET
        monitor_json_schema = jsonb_set(monitor_json_schema, '{additionalProperties}', 'false'::jsonb),
        reference_json_schema = jsonb_set(reference_json_schema, '{additionalProperties}', 'false'::jsonb);
    """
    op.execute(text(model_version_update))

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ingestion_errors', sa.Column('samples_ids', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('ingestion_errors', sa.Column('samples', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.drop_column('ingestion_errors', 'sample_id')
    op.drop_column('ingestion_errors', 'sample')
    op.drop_table('cache_invalidations')
    # ### end Alembic commands ###
