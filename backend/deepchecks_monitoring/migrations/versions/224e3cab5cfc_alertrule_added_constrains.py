# ----------------------------------------------------------------------------
# Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
#
# This file is part of Deepchecks.
# Deepchecks is distributed under the terms of the GNU Affero General
# Public License (version 3 or later).
# You should have received a copy of the GNU Affero General Public License
# along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
# ----------------------------------------------------------------------------
"""AlertRule: added constrains

Revision ID: 224e3cab5cfc
Revises: 10bbb2fd4aac
Create Date: 2022-08-24 15:44:32.870195

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '224e3cab5cfc'
down_revision = '10bbb2fd4aac'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('alert_rules', 'name',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('alert_rules', 'monitor_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_unique_constraint(None, 'alert_rules', ['name', 'monitor_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'alert_rules', type_='unique')
    op.alter_column('alert_rules', 'monitor_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('alert_rules', 'name',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    # ### end Alembic commands ###
