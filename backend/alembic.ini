
[public]
# path to migration scripts
script_location = deepchecks_monitoring/public_migrations
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s
prepend_sys_path = .
# timezone =
# truncate_slug_length = 40
# revision_environment = false
# sourceless = false
# version_locations = %(here)s/bar:%(here)s/bat:migrations/versions
version_path_separator = os  # Use os.pathsep. Default configuration used for new projects.
# output_encoding = utf-8
# sqlalchemy.url = driver://user:pass@localhost/dbname

[org]
script_location = deepchecks_monitoring/schema_migrations


[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.  See the documentation for further
# detail and examples

# format using "black" - use the console_scripts runner, against the "black" entrypoint
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic, app

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[logger_app]
level = INFO
handlers =
qualname = app

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
datefmt = "%Y-%m-%d %H:%M:%S"


# Config fields:
# ----
# + script_location = path/to/migrations
#
# path to migration scripts
#
# ----
# + file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s
#
# template used to generate migration file names; The default value is %%(rev)s_%%(slug)s
# Uncomment the line below if you want the files to be prepended with date and time
# see https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file
# for all available tokens
#
# ----
# + prepend_sys_path = .
#
# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
#
# ----
# + timezone =
#
# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library that can be
# installed by adding `alembic[tz]` to the pip requirements
# string value is passed to dateutil.tz.gettz()
# leave blank for localtime
#
# ----
# + truncate_slug_length = 40
#
# max length of characters to apply to the
# "slug" field
#
# ----
# + revision_environment = false
#
# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
#
# ----
# + sourceless = false
#
# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
#
# ----
# + version_locations = %(here)s/bar:%(here)s/bat:migrations/versions
#
# version location specification; This defaults
# to migrations/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path.
# The path separator used here should be the separator specified by "version_path_separator" below.
#
# ----
# + version_path_separator = os  # Use os.pathsep. Default configuration used for new projects.
#
# version path separator; As mentioned above, this is the character used to split
# version_locations. The default within new alembic.ini files is "os", which uses os.pathsep.
# If this key is omitted entirely, it falls back to the legacy behavior of splitting on spaces and/or commas.
# Valid values for version_path_separator are:
# version_path_separator = :
# version_path_separator = ;
# version_path_separator = space
#
# ----
# + output_encoding = utf-8
#
# the output encoding used when revision files
# are written from script.py.mako
#
# ----
# + sqlalchemy.url = driver://user:pass@localhost/dbname
#
# Database url